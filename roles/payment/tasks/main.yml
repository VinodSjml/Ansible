- name: install python
  ansible.builtin.package:
   name: 
    - python36 
    - gcc 
    - python3-devel
   state: present

- name: add {{appuser}} account 
  ansible.builtin.user: 
   user: "{{appuser}}"
   comment: adding service account
  register: out

- name: print user out
  ansible.builtin.debug:
   msg: output of adding a user is {{out}}

- name: assign user id 
  ansible.builtin.set_fact:
   user_id: "{{out.uid}}"

- name: assign user id 
  ansible.builtin.set_fact:
   group_id: "{{out.group}}"

- name: print user and group id
  ansible.builtin.debug:
   msg: value of userid is {{user_id}} and group id is {{group_id}}

- name: download {{component}} repo
  ansible.builtin.unarchive:
   src: https://github.com/stans-robot-project/payment/archive/main.zip
   dest: /tmp
   remote_src: yes

- name: perform cleanup 
  ansible.builtin.file:
   path: /home/{{appuser}}/{{component}}
   state: absent

- name: copying to {{appuser}} account
  ansible.builtin.copy: 
   src: /tmp/{{component}}-main/
   dest: /home/{{appuser}}/{{component}}
   owner: "{{appuser}}"
   group: "{{appuser}}"
   remote_src: yes

- name: install dependencies
  ansible.builtin.shell: pip3 install -r requirements.txt
  args:
   chdir: /home/{{appuser}}/{{component}}

- name: update userid
  ansible.builtin.lineinfile:
    path: /home/{{appuser}}/{{component}}/{{component}}.ini
    regexp: 'uid'
    line: uid = {{user_id}}

- name: update groupid
  ansible.builtin.lineinfile:
    path: /home/{{appuser}}/{{component}}/{{component}}.ini
    regexp: 'gid'
    line: gid = {{group_id}}

- name: updating systemd file
  ansible.builtin.template:
   src: systemd.service
   dest: /etc/systemd/system/payment.service

- name: starting {{component}} service
  systemd:
   name: "{{component}}"
   state: restarted
   enabled: yes

